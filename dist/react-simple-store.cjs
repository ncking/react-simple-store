var e=require("react");const t=(t,r={},n={})=>{let o=!1,s={...r};const c=new Set,{allowNested:a=!0}=n,i=(e,t)=>{if(!a&&o)throw new Error("Nested state mutation disabled");try{o=!0;const r="function"==typeof e?e(s):e;if(!Object.is(r,s)){if("object"!=typeof r)throw new Error("next state not object");const e=s;s=t?r:{...s,...r},c.forEach(t=>t(s,e))}}finally{o=!1}},u=()=>s,l=e=>(c.add(e),()=>{c.delete(e)}),d=(e,t,r)=>{let n=e(s);return()=>{const o=e(s);(r?r(n,o):Object.is(n,o))||(t(o,n),n=o)}},b=function(){var e=[].slice.call(arguments);return l(e[1]?d(...e):e[0])};return{...t(i,u,{subscribe:b}),useStore:(t,r,n)=>{const[{value:o,rebind:c},a]=e.useState({value:t(s),rebind:!!n?.rebind});return e.useEffect(()=>{const e=d(t,e=>a({value:e,rebind:c}),r);return e(),l(e)},c?[t]:[]),o},getState:u,setState:i,destroy:()=>c.clear(),subscribe:b}};exports.createStore=t,exports.createStoreRedux=(e,r)=>t((t,r)=>({dispatch:n=>(t(e(r(),n)),n)}),r);
