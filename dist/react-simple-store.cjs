var e=require("react");const t=(t,r={},o={})=>{let s=!1,n={...r};const c=new Set,{allowNested:a=!0}=o,i=(e,t)=>{if(!a&&s)throw new Error("Nested state mutation disabled");try{s=!0;const r="function"==typeof e?e(n):e;if(!Object.is(r,n)){if("object"!=typeof r)throw new Error("next state not object");const e=n;n=t?r:{...n,...r},c.forEach(t=>t(n,e))}}finally{s=!1}},u=()=>n,l=e=>(c.add(e),()=>{c.delete(e)}),d=(e,t,r)=>{let o=e(n);return l(()=>{const s=e(n);(r?r(o,s):Object.is(o,s))||(t(s,o),o=s)})},b=function(){var e=[].slice.call(arguments);return e[1]?d(...e):l(e[0])};return{...t(i,u,{subscribe:b}),useStore:(t,r,o)=>{const[{value:s,rebind:c},a]=e.useState({value:t(n),rebind:!!o?.rebind});return e.useEffect(()=>d(t,e=>a({value:e,rebind:c}),r),c?[t]:[]),s},getState:u,setState:i,destroy:()=>c.clear(),subscribe:b}};exports.createStore=t,exports.createStoreRedux=(e,r)=>t((t,r)=>({dispatch:o=>(t(e(r(),o)),o)}),r);
