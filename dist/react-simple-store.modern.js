import{useState as t,useEffect as e}from"react";function r(){return r=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t},r.apply(this,arguments)}const n=(n,o={},s={})=>{let a=!1,c=r({},o);const i=new Set,{allowNested:l=!0}=s,b=(t,e)=>{if(!l&&a)throw new Error("Nested state mutation disabled");try{a=!0;const n="function"==typeof t?t(c):t;if(!Object.is(n,c)){if("object"!=typeof n)throw new Error("next state not object");const t=c;c=e?n:r({},c,n),i.forEach(e=>e(c,t))}}finally{a=!1}},u=()=>c,d=t=>(i.add(t),()=>{i.delete(t)}),f=(t,e,r)=>{let n=t(c);return()=>{const o=t(c);(r?r(n,o):Object.is(n,o))||(e(o,n),n=o)}},p=(...t)=>d(t[1]?f(...t):t[0]);return r({},n(b,u,{subscribe:p}),{useStore:(r,n,o)=>{const[{value:s,rebind:a},i]=t({value:r(c),rebind:!(null==o||!o.rebind)});return e(()=>{const t=f(r,t=>i({value:t,rebind:a}),n);return t(),d(t)},a?[r]:[]),s},getState:u,setState:b,destroy:()=>i.clear(),subscribe:p})},o=(t,e)=>n((e,r)=>({dispatch:n=>(e(t(r(),n)),n)}),e);export{n as createStore,o as createStoreRedux};
