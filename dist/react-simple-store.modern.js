import{useState as t,useEffect as e}from"react";function r(){return r=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t},r.apply(this,arguments)}const n=(n,o={},s={})=>{let c=!1,a=r({},o);const i=new Set,{allowNested:l=!0}=s,u=(t,e)=>{if(!l&&c)throw new Error("Nested state mutation disabled");try{c=!0;const n="function"==typeof t?t(a):t;if(!Object.is(n,a)){const t=a;a=(null!=e?e:"object"!=typeof n)?n:r({},a,n),i.forEach(e=>e(a,t))}}finally{c=!1}},b=()=>a,f=t=>(i.add(t),()=>{i.delete(t)}),d=(t,e,r)=>{let n=t(a);return f(()=>{const o=t(a);Object.is(n,o)||r&&r(n,o)||(n=o,e(o,n))})},p=(t,e,r)=>e?d(t,e,r):f(t);return r({},n(u,b,{subscribe:p}),{useStore:(r,n)=>{const[o,s]=t(r(a));return e(()=>d(r,s,n),[]),o},getState:b,setState:u,destroy:()=>i.clear(),subscribe:p})},o=(t,e)=>n((e,r)=>({dispatch:n=>(e(t(r(),n)),n)}),e);export{n as createStore,o as createStoreRedux};
