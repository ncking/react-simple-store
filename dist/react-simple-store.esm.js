import{useState as t,useEffect as e}from"react";const r=(r,n={},o={})=>{let s=!1,c={...n};const i=new Set,{allowNested:a=!0}=o,l=(t,e)=>{if(!a&&s)throw new Error("Nested state mutation disabled");try{s=!0;const r="function"==typeof t?t(c):t;if(!Object.is(r,c)){if("object"!=typeof r)throw new Error("next state not object");const t=c;c=e?r:{...c,...r},i.forEach(e=>e(c,t))}}finally{s=!1}},u=()=>c,b=t=>(i.add(t),()=>{i.delete(t)}),d=(t,e,r)=>{let n=t(c);return()=>{const o=t(c);(r?r(n,o):Object.is(n,o))||(e(o,n),n=o)}},f=function(){var t=[].slice.call(arguments);return b(t[1]?d(...t):t[0])};return{...r(l,u,{subscribe:f}),useStore:(r,n,o)=>{const[{value:s,rebind:i},a]=t({value:r(c),rebind:!!o?.rebind});return e(()=>{const t=d(r,t=>a({value:t,rebind:i}),n);return t(),b(t)},i?[r]:[]),s},getState:u,setState:l,destroy:()=>i.clear(),subscribe:f}},n=(t,e)=>r((e,r)=>({dispatch:n=>(e(t(r(),n)),n)}),e);export{r as createStore,n as createStoreRedux};
