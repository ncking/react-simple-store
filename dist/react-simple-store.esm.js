import{useRef as t,useState as e,useEffect as r}from"react";const o=(o,n={},c={})=>{let s,a=!1,i={...n};const l=new Set,{allowNested:u=!0}=c,f=(t,e)=>{if(!u&&a)throw new Error("Nested state mutation disabled");try{a=!0;const r="function"==typeof t?t(i):t;if(!Object.is(r,i)){if("object"!=typeof r)throw new Error("next state not object");const t=i;i=e?r:{...i,...r},s=performance.now(),l.forEach(e=>e(i,t))}}finally{a=!1}},b=()=>i,d=t=>(l.add(t),()=>{l.delete(t)}),w=(t,e,r)=>{let o=t(i);return()=>{const n=t(i);(r?r(o,n):Object.is(o,n))||(e(n,o),o=n)}},p=function(){var t=[].slice.call(arguments);return d(t[1]?w(...t):t[0])};return{...o(f,b,{subscribe:p}),useStore:(o,n,c=!1)=>{const a=t([c,s]),[{v:l},u]=e({v:o(i)}),[f,b]=a.current;return r(()=>{const t=w(o,t=>u({v:t}),n);return b!==s&&t(),d(t)},f?[o]:[]),l},getState:b,setState:f,destroy:()=>l.clear(),subscribe:p}},n=(t,e)=>o((e,r)=>({dispatch:o=>(e(t(r(),o)),o)}),e);export{o as createStore,n as createStoreRedux};
