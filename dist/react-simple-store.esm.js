import{useState as e,useEffect as t}from"react";const r=(r,n={},o={})=>{let s=!1,c={...n};const i=new Set,{allowNested:a=!0}=o,l=(e,t)=>{if(!a&&s)throw new Error("Nested state mutation disabled");try{s=!0;const r="function"==typeof e?e(c):e;if(!Object.is(r,c)){if("object"!=typeof r)throw new Error("next state not object");const e=c;c=t?r:{...c,...r},i.forEach(t=>t(c,e))}}finally{s=!1}},b=()=>c,d=e=>(i.add(e),()=>{i.delete(e)}),u=(e,t,r)=>{let n=e(c);return d(()=>{const o=e(c);(r?r(n,o):Object.is(n,o))||(t(o,n),n=o)})},f=function(){var e=[].slice.call(arguments);return e[1]?u(...e):d(e[0])};return{...r(l,b,{subscribe:f}),useStore:(r,n,o)=>{const[{value:s,rebind:i},a]=e({value:r(c),rebind:!!o?.rebind});return t(()=>u(r,e=>a({value:e,rebind:i}),n),i?[r]:[]),s},getState:b,setState:l,destroy:()=>i.clear(),subscribe:f}},n=(e,t)=>r((t,r)=>({dispatch:n=>(t(e(r(),n)),n)}),t);export{r as createStore,n as createStoreRedux};
