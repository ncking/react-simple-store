import{useState as t,useEffect as e,createElement as r}from"react";const o=(r,o={},n={})=>{let s=!1,c={...o};const a=new Set,{allowNested:i=!0}=n,u=(t,e)=>{if(!i&&s)throw new Error("Nested state mutation disabled");try{s=!0;const r="function"==typeof t?t(c):t;if(!Object.is(r,c)){if("object"!=typeof r)throw new Error("next state not object");const t=c;c=e?r:{...c,...r},a.forEach(e=>e(c,t))}}finally{s=!1}},l=()=>c,d=t=>(a.add(t),()=>{a.delete(t)}),f=(t,e,r,o=t(c))=>{let n=o;return()=>{const o=t(c);(r?r(n,o):Object.is(n,o))||(e(o,n),n=o)}},b=function(){var t=[].slice.call(arguments);return d(t[1]?f(...t):t[0])};return{...r(u,l,{subscribe:b}),useStore:(r,o,n=!1)=>{const[{v:s,r:a},i]=t({v:r(c),r:!!n});return e(()=>{const t=f(r,t=>i({v:t,r:a}),o,s);return t(),d(t)},a?[r]:[]),s},getState:l,setState:u,destroy:()=>a.clear(),subscribe:b}},n=(t,e)=>{const n=o((e,r)=>({dispatch:o=>e(t(r(),o))}),e),{useStore:s,dispatch:c}=n;return n.connect=(t,e)=>o=>n=>{const a=s(t);return r(o,{...n,...a,...e(c)})},n};export{o as createStore,n as createStoreRedux};
